#ifndef __TASK_H__
#define __TASK_H__

//----------------------------------------------------------
//	定数宣言
//----------------------------------------------------------
#define TASK_MAX	16
#define TASK_WORK_MAX	16

#define FAST_TASK	0xfe
#define END_TASK	0xff

#define TASKWORK_MAX_SIZEOF	(sizeof(s16) * TASK_WORK_MAX)

#define	NOT_EXIST_TASK_ID	0xff	/* CheckTaskNoで使用、存在しない場合 */

//----------------------------------------------------------
//	型･構造体宣言
//----------------------------------------------------------
typedef void (*pTaskFunc)(u8);

typedef struct{
	pTaskFunc TaskAdrs;
	u8	occ;		//occupied;	//有効･無効ﾌﾗｸﾞ(1:有効)
	u8	prev;
	u8	next;
	u8	pri;
	s16 work[TASK_WORK_MAX];
}TASK_TABLE;


//=========================================================================
//	外部変数宣言
//=========================================================================
extern TASK_TABLE	TaskTable[TASK_MAX];

//=========================================================================
//	外部関数宣言
//=========================================================================
//----------------------------------------------------------
//	タスクテーブル全初期化
//----------------------------------------------------------
extern void InitTask(void);

//----------------------------------------------------------
//	タスク関数登録
// 引数:TaskAdrs=登録する関数のﾎﾟｲﾝﾀ   pri=関数実行の優先順位(0(高) 〜 0xff(低))
// 戻り値:登録されたTaskTableの配列番号
//----------------------------------------------------------
extern u8 AddTask(pTaskFunc TaskAdrs, u8 pri);

//----------------------------------------------------------
//	登録関数削除
//----------------------------------------------------------
extern void DelTask(u8 taskno);

//----------------------------------------------------------
//	メイン
//----------------------------------------------------------
extern void MainTask(void);

//----------------------------------------------------------
//	Dummy関数
//----------------------------------------------------------
extern void DummyTaskSeq(u8 taskno);


//=========================================================================
//	ツール類
//=========================================================================
//----------------------------------------------------------
//	ﾀｽｸのTaskAdrsを変更して、戻り先のｱﾄﾞﾚｽを最後尾のwork2つにｾｯﾄする
// NextAdrs = TaskAdrsにｾｯﾄする関数のｱﾄﾞﾚｽ
// ReturnAdrs = workの最後尾にｾｯﾄするｱﾄﾞﾚｽ
//----------------------------------------------------------
extern void ChangeTask(u8 taskno, pTaskFunc NextAdrs, pTaskFunc ReturnAdrs);

//----------------------------------------------------------
//	ChangeTaskを使用してﾜｰｸにｾｯﾄしておいたｱﾄﾞﾚｽを取り出して、TaskAdrsにｾｯﾄする
//----------------------------------------------------------
extern void ChangeBackTask(u8 taskno);

//-------------------------------------------------------------------------
//	登録済みのタスクかどうかのチェック
//
// TRUE		登録されている
// FALSE	登録されていない
//-------------------------------------------------------------------------
extern u8 CheckTask(pTaskFunc func);

//-------------------------------------------------------------------------
//	タスクプログラムアドレスからタスクナンバーを返す
//
// NOT_EXIST_TASK_ID	登録されていない
// それ以外				登録されている
//-------------------------------------------------------------------------
extern u8 CheckTaskNo( pTaskFunc func );

//----------------------------------------------------------
//	今いくつのﾀｽｸが使用中か調べる　ﾃﾞﾊﾞｯｸ用かな？
// 戻り値: 使用中のﾀｽｸの数
//----------------------------------------------------------
extern u8 CheckMoveTask(void);


#endif	//__TASK_H__
