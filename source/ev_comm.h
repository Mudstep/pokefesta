#ifndef __EV_COMM_H__
#define __EV_COMM_H__


//=========================================================================
//	
//=========================================================================

#undef GLOBAL
#ifdef __EV_COMM_H_GLOBAL__
#define GLOBAL /*	*/
#else
#define GLOBAL extern
#endif

//=========================================================================
//	定義
//=========================================================================

// 通信モードの値(ScriptParameter0に格納される）
#define	COMM_ID_NOTHING		0		/* モードなし（非通信時） */
#define	COMM_ID_1VS1BATTLE	1		/* 1対1の対戦 */
#define	COMM_ID_2VS2BATTLE	2		/* 2対2の対戦 */
#define	COMM_ID_TRADE		3		/* 交換 */
#define	COMM_ID_RECORD		4		/* レコードコーナー */
#define COMM_ID_4BATTLE		5		/* 4人対戦 */

// 接続処理の戻り値(プログラムからAnswerWork にかえされる) 
#define COMM_RES_WAIT		0		/* 接続処理中 */
#define	COMM_RES_OK			1		/* 接続ＯＫ */
#define	COMM_RES_TIMEOUT	2		/* タイムアウト */
#define	COMM_RES_OTHERMODE	3		/* モードが違う */
#define COMM_RES_WRONG_NUM	4		/* 人数が違う */
#define COMM_RES_CANCEL		5		/* キャンセルした */
#define	COMM_RES_ERROR		6		/* エラー終了 */




#ifndef	ASM_CPP			/* 以下はCソースにインクルードした場合だけコンパイル対象 */

//=========================================================================
//	変数
//=========================================================================
//GLOBAL type valiable;



//=========================================================================
//	関数プロトタイプ
//=========================================================================

//-------------------------------------------------------------------------
//	通信対戦の接続処理開始
//-------------------------------------------------------------------------
GLOBAL void ConnectBattleSio( void );

//-------------------------------------------------------------------------
//	通信交換の接続処理開始
//-------------------------------------------------------------------------
GLOBAL void ConnectTradeSio( void );

//-------------------------------------------------------------------------
//	レコードコーナーの接続処理開始
//-------------------------------------------------------------------------
GLOBAL void ConnectRecordSio( void );

//-------------------------------------------------------------------------
//	ブレンドマシーンの接続処理開始
//-------------------------------------------------------------------------
GLOBAL void ConnectBlendSio( void );


//-------------------------------------------------------------------------
//	部屋に入った時の認証処理
//	※他の通信モードからフィールド同期へ遷移する
//-------------------------------------------------------------------------
GLOBAL u8 AddNinshouRoomTask(void);

//-------------------------------------------------------------------------
//	ポケモン対戦モードからの復帰処理
//-------------------------------------------------------------------------
GLOBAL void CommBattleEnd( void );

//-------------------------------------------------------------------------
//	通信イベント開始待ちセット
//	<引数>	func	開始時に制御をわたすタスク
//-------------------------------------------------------------------------
GLOBAL void AddCommEventStartTask( pTaskFunc func );

//-------------------------------------------------------------------------
//	通信部屋からの出口遷移先をセット
//-------------------------------------------------------------------------
GLOBAL void CommExitSet( void );

//-------------------------------------------------------------
//	他のプレーヤーのトレーナーカード表示設定
//	<引数>	no		話し掛ける相手の通信ID
//-------------------------------------------------------------
GLOBAL int CommSetTalkTrainerInfo( u8 no );

// =================================================================
// JidouNinshouWatchDog
// 概要  : 自動認証の際に５秒以上経過した場合は通信エラーとする処理
// 引数  : no	タスクＩＤ
// 戻り値: none
// =================================================================
GLOBAL void JidouNinshouWatchDog(u8 no);

#endif	/* ASM_CPP */

#undef GLOBAL
#endif	/*__EV_COMM_H__*/

