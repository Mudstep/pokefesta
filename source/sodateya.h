// =================================================================
//
//	sodateya.h
//
//	育て屋用定義
//
//
// =================================================================

#ifdef SODATEYA_MAIN
#define EXTERN 
#else
#define EXTERN extern
#endif

// =================================================================
// 構造体定義
// =================================================================
/* 育て屋状況 (レコードコーナー用)*/
typedef struct{
	SIO_MAIL_DATA 	SioMail[2];			//育て屋に置かれるメールデータ
	u32				PokeNum;			//育て屋にいるポケモンの数
	u16				PokeFlag[2];		//ポケモンがアイテムを持っているかどうかのフラグ
}SODATEYA_MAIL;

// =================================================================
// PokeAzukeruCheck
// 概要  : 預けているポケモンの数を返す
// 引数  : none
// 戻り値: u8
// =================================================================
EXTERN u8 PokeAzukeruCheck(SODATEYA_WORK *sodateya);

// =================================================================
// PokeAzukeruCheckGet
// 概要  : 預けられるなら空いてる番号を返す
// 引数  : none
// 戻り値: s8	0,1=空いてる番号	-1=無し
// =================================================================
EXTERN s8 PokeAzukeruCheckGet(SODATEYA_WORK *sodateya);


// =================================================================
// PokeSodateSet
// 概要  : ポケモンを預ける
// 引数  : p
// 戻り値: none
// =================================================================
EXTERN void PokeSodateSet();



// =================================================================
// PokeSodateyaInit
// 概要  : 育て屋ワーク初期化
// 引数  : none
// 戻り値: none
// =================================================================
EXTERN void PokeSodateyaInit(SODATEYA_WORK *sodateya);

// =================================================================
// PokeSearchChild
// 概要  : 渡したポケモンＩＤの大元の子供を返します
// 引数  : pokeid	ポケモンのＩＤ
// 戻り値: u16		子供のＩＤ（子供が無い場合はそのまま引数を返します）
// =================================================================
EXTERN u16 PokeSearchChild(u16 pokeid);

// =================================================================
// PokeMakeTamago
// 概要  : タマゴを作る
// 引数  : sodateya
// 戻り値: none
// =================================================================
EXTERN void PokeMakeTamago(SODATEYA_WORK *sodateya);

// =================================================================
// PokeSodateya
// 概要  : 育て屋処理	（一歩歩く毎に処理されます）
// 引数  : none
// 戻り値: none
// =================================================================
EXTERN u8 PokeSodateyaSub(SODATEYA_WORK *sodateya);
// =================================================================
// PokemonTamagoCheck
// 概要  : タマゴがいるかどうか
// 引数  : none
// 戻り値: u8
// =================================================================
EXTERN u8 PokeTamagoCheck(SODATEYA_WORK *sodateya);

// =================================================================
// u8	PokeSodateya
// 概要  : 一歩歩く毎に経験値が加算
// 引数  : none
// 戻り値: none
// =================================================================
EXTERN u8	PokeSodateya();

// =================================================================
// PokeTamagoSet
// 概要  : タマゴをセットする
// 引数  : none
// 戻り値: none
// =================================================================
EXTERN void PokeTamagoSet();

// =================================================================
// void	SodateyaPlusWalk
// 概要  : 指定歩数歩いたことにする
// 引数  : none
// 戻り値: none
// =================================================================
EXTERN void	SodateyaPlusWalk(u16 count);

// =================================================================
// SodateTamagoHuka
// 概要  : タマゴをポケモンにかえす
// 引数  : none(ただしScriptParameter0に手持ちの番号が入ってる)
// 戻り値: none
// =================================================================
EXTERN void SodateTamagoHuka();

// =================================================================
// SodateyaPokeAffinity
// 概要  : 育て屋にポケモンの相性を返す
// 引数  : none
// 戻り値: u8
// =================================================================
EXTERN u8 SodateyaPokeAffinity();

// =================================================================
// SioMailDataInit
// 概要  : 育て屋メールワークを初期化
// 引数  : smd
// 戻り値: none
// =================================================================
EXTERN void SioMailDataInit(SIO_MAIL_DATA	*smd);


// =================================================================
// TamagoFlagsSet
// 概要  : タマゴを作る
// 引数  : poke			:格納する場所のポインタ
//       : monsno		:ポケモンの番号（開発ナンバー）
//		 : flag			:ゲーム内イベントでもらったか？（1:はい  0:育て屋）
// 戻り値: none
// =================================================================
EXTERN void PokemonTamagoSet(PokemonParam *poke, u16 monsno, u8 eventflag);


// =================================================================
// PokeAzukeInfoCheck
// 概要  : 育て屋に預けているポケモンのアイテム状況を調べる
// 引数  : sodateya
//       : mailinfo
// 戻り値: none
// =================================================================
EXTERN void PokeAzukeInfoCheck(SODATEYA_WORK *sodateya, SODATEYA_MAIL *mailinfo);

#undef EXTERN