/***********************************************************************
**	おやじセーブデータ管理
***********************************************************************/
#ifndef _OYAJI_H_
#define _OYAJI_H_

/***********************************************************************
**  おやじタイプ                                                      **
***********************************************************************/
#define OYAJITYPE_SINGER   (0)  // シンガーソングおやじ
#define OYAJITYPE_NOW      (1)  // ナウイおやじ
#define OYAJITYPE_RECYCLE  (2)  // リサイクルおやじ
#define OYAJITYPE_LEGEND   (3)  // でんせつおやじ
#define OYAJITYPE_MARCHEN  (4)  // メルヘンおやじ

#ifndef ASM_CPP

/***********************************************************************
**  おやじタイプ別データ領域構造体                                    **
***********************************************************************/
/*============================================*/
/*=  シンガーソングおやじ                    =*/
/*============================================*/
#define  SONG_WORD_MAX  (6)

typedef struct {
	u8   type;                    // おやじタイプ
	u16  word[SONG_WORD_MAX];     // 現在の歌詞
	u16  new_word[SONG_WORD_MAX]; // 編集後の歌詞（一時領域）
	u8   writer_name[11];         // 直前に歌詞を変えた人の名前
	u8   writer_id[4];            // 直前に歌詞を変えた人のID
	u8   changed;                 // 歌詞を替えたかどうか？
}OYAJIDATA_SINGER;

/*============================================*/
/*=  ナウイおやじ                            =*/
/*============================================*/
typedef struct {
	u8   type;      // おやじタイプ
	u8   told;      // ことばを教わったかどうか？
}OYAJIDATA_NOW;


/*============================================*/
/*=  メルヘンおやじ                          =*/
/*============================================*/
#define MARCHEN_WORD_MAX    (10)
#define MARCHEN_EXWORD_MAX  (8)
#define MARCHEN_SUB_MAX     (8)

typedef struct {
	u8  type;    // おやじタイプ

	u8   cnt;    // カウンタ
	u8   ex_cnt; // 特殊文字列ｶｳﾝﾀ

	u16  word_code[MARCHEN_WORD_MAX];
	u8   exword_no[MARCHEN_EXWORD_MAX];

}OYAJIDATA_MARCHEN;

/***********************************************************************
**  プロトタイプ                                                      **
***********************************************************************/
void OyajiInit(void);    // ゲーム初期化時
void OyajiReset(void);   // 通信交換終了時

#endif  /* #ifndef ASM_CPP */
#endif  /* #ifndef _OYAJI_H_ */
