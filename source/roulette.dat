//========================================================================================
//							ミニゲーム・ルーレット
//							プログラムで使用する、固定値
//								2002/03/28 by nakahiro
//								2002/05/30 iwasaaw's job,a job form hakahito
//========================================================================================

////////////////////////////////////////////////////////////////
//	BGデータの参照アドレス
///////////////////////////////////////////////////////////////
#define BG01_MAP_SIZ	(0x1A0)
#define BG01_SMAP_SIZ	(0x80)
#define WAKU00_MAP_SIZ	(0x12)
#define WAKU01_MAP_SIZ	(0x4E)
#define WAKU02_MAP_SIZ	(0x60)
#define BG01_MAP_AREA	(RLT_UWORK_GPBG)
#define BG01_SMAP_AREA	(BG01_MAP_AREA+BG01_MAP_SIZ)
#define WAKU00_MAP_AREA	(BG01_SMAP_AREA+BG01_SMAP_SIZ)
#define WAKU01_MAP_AREA	(WAKU00_MAP_AREA+WAKU00_MAP_SIZ)
#define WAKU02_MAP_AREA	(WAKU01_MAP_AREA+WAKU01_MAP_SIZ)

#define BG01_MAP	((u16 *)&(UserWork[BG01_MAP_AREA]))
#define BG01_SMAP	((u16 *)&(UserWork[BG01_SMAP_AREA]))
#define WAKU00_MAP	((u16 *)&(UserWork[WAKU00_MAP_AREA]))
#define WAKU01_MAP	((u16 *)&(UserWork[WAKU01_MAP_AREA]))
#define WAKU02_MAP	((u16 *)&(UserWork[WAKU02_MAP_AREA]))

////////////////////////////////////////////////////////////////
//	データ配列
///////////////////////////////////////////////////////////////
#define BET_FLG00	(0x00000000)
#define BET_FLG01	(0x00000002)
#define BET_FLG02	(0x00000004)
#define BET_FLG03	(0x00000008)
#define BET_FLG04	(0x00000010)
#define BET_FLG05	(0x00000020)
#define BET_FLG06	(0x00000040)
#define BET_FLG07	(0x00000080)
#define BET_FLG08	(0x00000100)
#define BET_FLG09	(0x00000200)
#define BET_FLG10	(0x00000400)
#define BET_FLG11	(0x00000800)
#define BET_FLG12	(0x00001000)
#define BET_FLG13	(0x00002000)
#define BET_FLG14	(0x00004000)
#define BET_FLG15	(0x00008000)
#define BET_FLG16	(0x00010000)
#define BET_FLG17	(0x00020000)
#define BET_FLG18	(0x00040000)
#define BET_FLG19	(0x00080000)

#define COLA_FLG00	(0x0000)	//0 
#define COLA_FLG01	(0xE000)	//13
#define COLA_FLG02	(0xE000)	//13
#define COLA_FLG03	(0xE000)	//13
#define COLA_FLG04	(0xE000)	//13
#define COLA_FLG05	(COLANM_SW00 |COLANM_SW03 |COLANM_SW06 |COLANM_SW09 )	//0,3,6,9
#define COLA_FLG06	(COLANM_SW00 | COLANM_SW13)	//0
#define COLA_FLG07	(COLANM_SW09 | COLANM_SW13)	//9
#define COLA_FLG08	(COLANM_SW06 | COLANM_SW13)	//6
#define COLA_FLG09	(COLANM_SW03 | COLANM_SW13)	//3
#define COLA_FLG10	(COLANM_SW01 |COLANM_SW04 |COLANM_SW07 |COLANM_SW10 )	//1,4,7,10
#define COLA_FLG11	(COLANM_SW04 | COLANM_SW13)	//4
#define COLA_FLG12	(COLANM_SW01 | COLANM_SW13)	//1
#define COLA_FLG13	(COLANM_SW10 | COLANM_SW13)	//10
#define COLA_FLG14	(COLANM_SW07 | COLANM_SW13)	//7
#define COLA_FLG15	(COLANM_SW02 |COLANM_SW05 |COLANM_SW08 |COLANM_SW11 )	//2,5,8,11
#define COLA_FLG16	(COLANM_SW08 | COLANM_SW13)	//8
#define COLA_FLG17	(COLANM_SW05 | COLANM_SW13)	//5
#define COLA_FLG18	(COLANM_SW02 | COLANM_SW13)	//2
#define COLA_FLG19	(COLANM_SW11 | COLANM_SW13)	//11

//縦と横のフラグ
#define BET_FLG_VP1	( BET_FLG01 | BET_FLG06 | BET_FLG11 | BET_FLG16 )
#define BET_FLG_VP2 ( BET_FLG02 | BET_FLG07 | BET_FLG12 | BET_FLG17 )
#define BET_FLG_VP3 ( BET_FLG03 | BET_FLG08 | BET_FLG13 | BET_FLG18 )
#define BET_FLG_VP4 ( BET_FLG04 | BET_FLG09 | BET_FLG14 | BET_FLG19 )

#define BET_FLG_HR	( BET_FLG05 | BET_FLG06 | BET_FLG07 | BET_FLG08 | BET_FLG09 )
#define BET_FLG_HG	( BET_FLG10 | BET_FLG11 | BET_FLG12 | BET_FLG13 | BET_FLG14 )
#define BET_FLG_HB	( BET_FLG15 | BET_FLG16 | BET_FLG17 | BET_FLG18 | BET_FLG19 )

//ベットテーブル
const BET_PARAM	g_rltBet[] =
{
	{0xFF,  0, 0, 0, 0, 0x07, 0x07, 0x0, 0x0, BET_FLG00, BET_FLG00, COLA_FLG00},	// ダミー
	{12,  4, 1, 0, 0, 0x11, 0x07, 0x0, 0x0,  BET_FLG01, BET_FLG_VP1,COLA_FLG01},	// poke = 1, color = 0
	{13,  4, 2, 0, 0, 0x14, 0x07, 0x0, 0x0,  BET_FLG02, BET_FLG_VP2,COLA_FLG02},	// poke = 2, color = 0
	{14,  4, 3, 0, 0, 0x17, 0x07, 0x0, 0x0,  BET_FLG03, BET_FLG_VP3,COLA_FLG03},	// poke = 3, color = 0
	{15,  4, 4, 0, 0, 0x1a, 0x07, 0x0, 0x0,  BET_FLG04, BET_FLG_VP4,COLA_FLG04},	// poke = 4, color = 0

	{16,  3, 0, 1, 0, 0x0e, 0x0a, 0x0, 0xC,  BET_FLG05, BET_FLG_HR, COLA_FLG05},	// poke = 0, color = 1
	{ 0, 12, 1, 1, 0, 0x11, 0x0a, 0x3, 0x3,  BET_FLG06, BET_FLG06,  COLA_FLG06},	// poke = 1, color = 1
	{ 9, 12, 2, 1, 0, 0x14, 0x0a, 0x3, 0x3,  BET_FLG07, BET_FLG07,  COLA_FLG07},	// poke = 2, color = 1
	{ 6, 12, 3, 1, 0, 0x17, 0x0a, 0x3, 0x3,  BET_FLG08, BET_FLG08,  COLA_FLG08},	// poke = 3, color = 1
	{ 3, 12, 4, 1, 0, 0x1a, 0x0a, 0x3, 0x3,  BET_FLG09, BET_FLG09,  COLA_FLG09},	// poke = 4, color = 1

	{17,  3, 0, 2, 0, 0x0e, 0x0d, 0x3, 0xF,  BET_FLG10, BET_FLG_HG, COLA_FLG10},	// poke = 0, color = 2
	{ 4, 12, 1, 2, 0, 0x11, 0x0d, 0x6, 0x6,  BET_FLG11, BET_FLG11,  COLA_FLG11},	// poke = 1, color = 2
	{ 1, 12, 2, 2, 0, 0x14, 0x0d, 0x6, 0x6,  BET_FLG12, BET_FLG12,  COLA_FLG12},	// poke = 2, color = 2
	{10, 12, 3, 2, 0, 0x17, 0x0d, 0x6, 0x6,  BET_FLG13, BET_FLG13,  COLA_FLG13},	// poke = 3, color = 2
	{ 7, 12, 4, 2, 0, 0x1a, 0x0d, 0x6, 0x6,  BET_FLG14, BET_FLG14,  COLA_FLG14},	// poke = 4, color = 2

	{18,  3, 0, 3, 0, 0x0e, 0x10, 0x6, 0x12, BET_FLG15, BET_FLG_HB, COLA_FLG15},	// poke = 0, color = 3
	{ 8, 12, 1, 3, 0, 0x11, 0x10, 0x9, 0x9,  BET_FLG16, BET_FLG16,  COLA_FLG16},	// poke = 1, color = 3
	{ 5, 12, 2, 3, 0, 0x14, 0x10, 0x9, 0x9,  BET_FLG17, BET_FLG17,  COLA_FLG17},	// poke = 2, color = 3
	{ 2, 12, 3, 3, 0, 0x17, 0x10, 0x9, 0x9,  BET_FLG18, BET_FLG18,  COLA_FLG18},	// poke = 3, color = 3
	{11, 12, 4, 3, 0, 0x1a, 0x10, 0x9, 0x9,  BET_FLG19, BET_FLG19,  COLA_FLG19},	// poke = 4, color = 3
};

//セルパラメータ
const RLT_CELL_PARAM	g_rltCell[] = {
	{ 0,	1,	6,	BET_FLG06},	//Cell_No,Area_NO,bit_no,bit_flg
	{ 1,	3,	12,	BET_FLG12},				
	{ 2,	5,	18,	BET_FLG18},
	{ 3,	7,	9,	BET_FLG09},
	{ 4,	9,	11,	BET_FLG11},
	{ 5,	11,	17,	BET_FLG17},			
	{ 6,	13,	8,	BET_FLG08},			
	{ 7,	15,	14,	BET_FLG14},			
	{ 8,	17,	16,	BET_FLG16},			
	{ 9,	19,	7,	BET_FLG07},			
	{10,	21,	13,	BET_FLG13},			
	{11,	23,	19,	BET_FLG19},			
};	

const u8 g_rltRate[][2] = {{1,3},{1,6}};

//テーブルのパラメータ
const RLT_TABLE_PARAM	g_table[] = {
	{
		1,60,30,	//レート、ROT、ROT_H
		1,1,		//基礎スピード、回転用ウェイト
		{			//イベント用のパラメータ
			{45,30,1},
			{75,27,24},
		},
		10,360,		//ボールの初速、落ちるまでの基本タイム
		-0.5f
	},
	{
		3,30,15,	//レート、ROT、ROT_H
		1,0,		//基礎スピード、回転用ウェイト
		{			//イベント用のパラメータ
			{75,60,2},
			{0,54,48},
		},
		10,270,		//ボールの初速、落ちるまでの基本タイム
		-1.0f
	},
};

#define COL_PMOR	0x53ff	//(0x2A99)
#define COL_PMOG	0x7ffb	//(0x56CF)
#define COL_PMOB	0x7f7f	//(0x4DF3)
const ColAnmData g_colanm[] = {
	{
		0x8000,
		0x05,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x0A,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x15,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x55,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x5A,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x65,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x75,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x7A,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x85,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x95,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0x9A,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{
		0x8000,
		0xA5,1,	//カラーナンバー、数
		1,0xFF,	//ウェイト、ループ数
		8,2,0,	//ステップ数、モード、明度を上げるか、下げるか
	},
	{	//盤用
		0x77d6,
		0x28,2,		//カラーナンバー、数
		10,0xFF,	//ウェイト、ループ数
		14,2,0,		//ステップ数、モード、明度を上げるか、下げるか
	},	
	{	//オブジェ用
//		0x1E36,
		COL_PMOR,
		0x101,5,	//カラーナンバー、数
		30,0xFF,		//ウェイト、ループ数
		14,2,0,		//ステップ数、モード、明度を上げるか、下げるか
	},
	{	//オブジェ用
//		0x4A6C,
		COL_PMOG,
		0x106,5,	//カラーナンバー、数
		30,0xFF,		//ウェイト、ループ数
		14,2,0,		//ステップ数、モード、明度を上げるか、下げるか
	},
	{	//オブジェ用
//		0x4190,
		COL_PMOB,
		0x10B,5,	//カラーナンバー、数
		30,0xFF,		//ウェイト、ループ数
		14,2,0,		//ステップ数、モード、明度を上げるか、下げるか
	},
};

///////////////////////////////////////////////////////////////
//	メッセージデータ
///////////////////////////////////////////////////////////////
/* 会話ウィンドウ関連定義 */
#define MWIN_XPOS		1			//MSGウィンドウの表示Ｘ位置
#define MWIN_YPOS		14			//MSGウィンドウの表示Ｙ位置
#define	MWIN_XMARGIN	3			//実際のメッセージ表示位置とウィンドウ位置の差分(Ｘ)
#define	MWIN_YMARGIN	1			//実際のメッセージ表示位置とウィンドウ位置の差分(Ｙ)
#define MWIN_MSGXPOS	(MWIN_XPOS+MWIN_XMARGIN)	//MSG表示開始X位置
#define MWIN_MSGYPOS	(MWIN_YPOS+MWIN_YMARGIN)	//MSG表示開始Y位置

//メッセージデータ
extern const u8 msg_roulette_01[];
extern const u8 msg_roulette_02[];
extern const u8 msg_roulette_03[];
extern const u8 msg_roulette_04[];
extern const u8 msg_roulette_05[];
extern const u8 msg_roulette_06[];
extern const u8 msg_roulette_07[];
extern const u8 msg_roulette_08[];
extern const u8 msg_roulette_09[];
extern const u8 msg_roulette_10[];
extern const u8 msg_roulette_11[];
extern const u8 msg_roulette_12[];
extern const u8 msg_roulette_13[];

#define MSG_START	msg_roulette_01
#define MSG_NOCOIN	msg_roulette_02
#define MSG_BONUS	msg_roulette_03
#define MSG_PANEL	msg_roulette_04
#define MSG_WIN		msg_roulette_05
#define MSG_WIN2	msg_roulette_06
#define MSG_ROST	msg_roulette_07
#define MSG_GETCOIN	msg_roulette_08
#define MSG_SPEND	msg_roulette_09
#define MSG_REPLAY	msg_roulette_10
#define MSG_GCLEAR	msg_roulette_11
#define MSG_NOCASE	msg_roulette_12
#define MSG_FULLCOIN	msg_roulette_13
